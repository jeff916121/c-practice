

1.
while (true){
    if(A){
        // A
        break;
    }
    if(B){
        // !A && B
        break;
    }
    // !A && !B
}
// A+(!A&&B) = A+B

if(A){
    // (!A ++ B )A = AB
}
if(B){
    // (!A ++ B )B = B
}

----------------------------

while(!A&&!B){


}

=====

while(!A && !B){

}
if(!A){
    // ( A + B ) !A = !A B
}
if(B){
    // ( A + B ) B = B
}

===

while(!A || !B){

}
if(!A){
    // ( A B ) !A = 0
}
if(B){
    // ( A B ) B = A B
}

while ( i%3 == 0 && i%4 != 0 ){ // 只要一個不成立就會跳


}
if( i%3 == 0 ){
    // 代入 i%3 == 0 ，i%3 == 0 && i%4 != 0 

}
if( i%4 == 0 ){
    // 代入 i%4 == 0 ，i%4 == 0
}

活下來的是誰?
代入 while 迴圈條件，尋找反例的集合

如果沒有判斷
代入 1 

=======================================

while ( i%3 == 0 || i%4 != 0 ){ // 兩個都要不成立才會跳


}
if( i%3 == 0 ){
    // 代入 i%3 == 0 ，找不到 solution => 0 

}
if( i%4 == 0 ){
    // 代入 i%4 == 0 ，i%4 == 0 && i%3 != 0
    // ( i%3 != 0 && i%4 == 0 ) &&  i%4 == 0 =>  i%4 == 0 && i%3 != 0
}

希望迴圈能濾出 是三 且 非四的 倍數
while ( i%3 != 0 || i%4 == 0 ){


}

希望迴圈能濾出 是三 且 ( 可能是 四 或 不是四 ) 的 倍數

while ( i%3 != 0 && i%4 == 0){


}
if (i%3 != 0) 找到空集合
if (i%3 == 0) 找到 i%3 == 0 && i%4 != 0


2.
while (true){
    if(A){
        ...
        break;
    }
    if(B){

        break;
    }
}

3.
while (true){
    if(A){

        break;
    }
    if(B){
        ...
        break;
    }
}

4.
while (true){
    if(A){
        ...
        break;
    }
    if(B){
        ...
        break;
    }
}

5.
while (true){
    if(A){
        if(B){
        
            break;
        }

    }
    
}

6.
while (true){
    if(A){
        if(B){
            ...
            break;
        }

    }
    
}

7.
while (true){
    if(A){
        if(B){
        
           
        }
        break;
    }
    
}

8.
while (true){
    if(A){
        if(B){
        
           
        }
        ...
        break;
    }
    
}



